{"version":3,"sources":["util.js"],"names":[],"mappings":"wBAAwB;;AAExB,QAAQ,UAAR,GAAqB,IAArB;AACA,QAAQ,eAAR,GAA0B,eAA1B;wBACwB,QAAQ,WAAR,GAAsB,WAAtB;;AAExB,I,wBAA4B,cAAc,QAAQ,aAAR,CAA1C;;;AAGA,IAAI,IAAI,wBAAwB,WAAxB,CAAR;;;AAGA,SAAS,uBAAT,CAAiC,GAAjC,EAAsC;AAAE,MAAI,OAAO,IAAI,UAAf,EAA2B;AAAE,WAAO,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAI,SAAS,EAAb,CAAiB,IAAI,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AAAE,YAAI,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,EAA0C,GAA1C,CAAJ,EAAoD,OAAO,GAAP,IAAc,IAAI,GAAJ,CAAd;AAAyB;AAAE,KAAC,OAAO,OAAP,GAAiB,GAAjB,CAAsB,OAAO,MAAP;AAAgB;AAAE;;AAE7Q,SAAS,eAAT,CAAyB,IAAzB,EAA+B;AAC7B,SAAO,EAAE,gBAAF,CAAmB,EAAE,UAAF,CAAa,oBAAb,CAAnB,EAAuD,EAAE,UAAF,CAAa,IAAb,CAAvD,EAA2E,KAA3E,CAAP;AACD,C;;;;;;;;;;AAUD,SAAS,WAAT,CAAqB,IAArB,EAA2B;AACzB,SAAO,KAAK,YAAL,MAAuB,KAAK,UAAL,CAAgB,sBAAhB,CAAuC,EAAE,MAAM,KAAK,IAAb,EAAvC,CAA9B;AACD","file":"util-compiled.js","sourcesContent":["/*istanbul ignore next*/\"use strict\";\n\nexports.__esModule = true;\nexports.runtimeProperty = runtimeProperty;\n/*istanbul ignore next*/exports.isReference = isReference;\n\nvar /*istanbul ignore next*/_babelTypes = require(\"babel-types\");\n\n/*istanbul ignore next*/\nvar t = _interopRequireWildcard(_babelTypes);\n\n/*istanbul ignore next*/\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction runtimeProperty(name) {\n  return t.memberExpression(t.identifier(\"regeneratorRuntime\"), t.identifier(name), false);\n} /**\n   * Copyright (c) 2014, Facebook, Inc.\n   * All rights reserved.\n   *\n   * This source code is licensed under the BSD-style license found in the\n   * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n   * additional grant of patent rights can be found in the PATENTS file in\n   * the same directory.\n   */\n\nfunction isReference(path) {\n  return path.isReferenced() || path.parentPath.isAssignmentExpression({ left: path.node });\n}"]}