{"version":3,"sources":["destructuring.js"],"names":[],"mappings":"wBAAwB;;AAExB,QAAQ,UAAR,GAAqB,IAArB;AACA,QAAQ,OAAR,GAAkB,SAAlB;;AAEA,I,wBAA4B,cAAc,QAAQ,aAAR,CAA1C;;;AAGA,IAAI,IAAI,wBAAwB,WAAxB,CAAR;;;AAGA,SAAS,uBAAT,CAAiC,GAAjC,EAAsC;AAAE,MAAI,OAAO,IAAI,UAAf,EAA2B;AAAE,WAAO,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAI,SAAS,EAAb,CAAiB,IAAI,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AAAE,YAAI,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,EAA0C,GAA1C,CAAJ,EAAoD,OAAO,GAAP,IAAc,IAAI,GAAJ,CAAd;AAAyB;AAAE,KAAC,OAAO,OAAP,GAAiB,GAAjB,CAAsB,OAAO,MAAP;AAAgB;AAAE;;AAE7Q,IAAI,U,wBAAkC,QAAQ,OAAR,GAAkB,E;AACtD,YAAU,SAAS,QAAT,CAAkB,IAAlB,EAAwB;AAChC,QAAI,SAAS,KAAK,GAAL,CAAS,QAAT,CAAb;;;;AAIA,QAAI,aAAa,EAAE,aAAF,CAAgB,OAAO,OAAO,MAAP,GAAgB,CAAvB,CAAhB,IAA6C,CAA7C,GAAiD,CAAlE;AACA,QAAI,qBAAqB,OAAO,MAAP,GAAgB,UAAzC;;AAEA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,kBAApB,EAAwC,GAAxC,EAA6C;AAC3C,UAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,UAAI,MAAM,cAAN,MAA0B,MAAM,eAAN,EAA9B,EAAuD;AACrD,YAAI,MAAM,KAAK,KAAL,CAAW,qBAAX,CAAiC,KAAjC,CAAV;;AAEA,YAAI,SAAS,EAAE,mBAAF,CAAsB,KAAtB,EAA6B,CAAC,EAAE,kBAAF,CAAqB,MAAM,IAA3B,EAAiC,GAAjC,CAAD,CAA7B,CAAb;AACA,eAAO,WAAP,GAAqB,qBAAqB,CAA1C;;AAEA,aAAK,WAAL;AACA,aAAK,GAAL,CAAS,MAAT,EAAiB,gBAAjB,CAAkC,MAAlC,EAA0C,MAA1C;;AAEA,cAAM,WAAN,CAAkB,GAAlB;AACD;AACF;AACF;AAvBqD,CAAxD","file":"destructuring-compiled.js","sourcesContent":["/*istanbul ignore next*/\"use strict\";\n\nexports.__esModule = true;\nexports.visitor = undefined;\n\nvar /*istanbul ignore next*/_babelTypes = require(\"babel-types\");\n\n/*istanbul ignore next*/\nvar t = _interopRequireWildcard(_babelTypes);\n\n/*istanbul ignore next*/\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar visitor = /*istanbul ignore next*/exports.visitor = { /*istanbul ignore next*/\n  Function: function Function(path) {\n    var params = path.get(\"params\");\n\n    // If there's a rest param, no need to loop through it. Also, we need to\n    // hoist one more level to get `declar` at the right spot.\n    var hoistTweak = t.isRestElement(params[params.length - 1]) ? 1 : 0;\n    var outputParamsLength = params.length - hoistTweak;\n\n    for (var i = 0; i < outputParamsLength; i++) {\n      var param = params[i];\n      if (param.isArrayPattern() || param.isObjectPattern()) {\n        var uid = path.scope.generateUidIdentifier(\"ref\");\n\n        var declar = t.variableDeclaration(\"let\", [t.variableDeclarator(param.node, uid)]);\n        declar._blockHoist = outputParamsLength - i;\n\n        path.ensureBlock();\n        path.get(\"body\").unshiftContainer(\"body\", declar);\n\n        param.replaceWith(uid);\n      }\n    }\n  }\n};"]}